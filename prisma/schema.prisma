// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("HEROKU_POSTGRESQL_CHARCOAL_URL")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  Decks     Deck[]
  deleted   Boolean  @default(false)
}

model Deck {
  id             Int         @id @default(autoincrement())
  name           String
  flashcards     Flashcard[] @relation(references: [id])
  createdAt      DateTime    @default(now()) @map(name: "created_at")
  updatedAt      DateTime    @updatedAt @map(name: "updated_at")
  author         User        @relation(fields: [authorId], references: [id])
  authorId       Int
  likes          Int         @default(0)
  likedByUserIds Int[]
  tags           Tag[]
  deleted        Boolean     @default(false)
}

model Flashcard {
  id            Int      @id @default(autoincrement())
  title         String
  frontImageUrl String
  backImageUrl  String
  author        User     @relation(fields: [authorId], references: [id])
  authorId      Int
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @updatedAt @map(name: "updated_at")
  decks         Deck[]   @relation(references: [id])
  deleted       Boolean  @default(false)
}

model User {
  id         Int         @id @default(autoincrement())
  name       String?
  email      String      @unique
  createdAt  DateTime    @default(now()) @map(name: "created_at")
  updatedAt  DateTime    @updatedAt @map(name: "updated_at")
  decks      Deck[]
  flashcards Flashcard[]
  deleted    Boolean     @default(false)
  Tag        Tag[]

  @@map(name: "users")
}
